/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useMemo, useContext, createContext } from "react";
import { useGLTF, Merged } from "@react-three/drei";

const context = createContext();
export function Instances({ children, ...props }) {
  const { nodes } = useGLTF("/friedchknnp.glb");
  const instances = useMemo(
    () => ({
      Cylinder: nodes.Cylinder,
      Cylinder1: nodes.Cylinder001,
      Cylinder2: nodes.Cylinder002,
      Cylinder3: nodes.Cylinder003,
      Cylinder4: nodes.Cylinder004,
      BezierCurve: nodes.BezierCurve,
    }),
    [nodes]
  );
  return (
    <Merged meshes={instances} {...props}>
      {(instances) => (
        <context.Provider value={instances} children={children} />
      )}
    </Merged>
  );
}

export function Burger(props) {
  const instances = useContext(context);
  return (
    <group {...props} dispose={null}>
      <group>
        <instances.Cylinder
          position={[0, 0, 0]}
          rotation={[1.58, 0, -2.15]}
          scale={0.3}
        />
        <instances.Cylinder1
          position={[0, 0, 0]}
          rotation={[-Math.PI / 2, 0, -0.99]}
          scale={0.3}
        />
        <instances.Cylinder2
          position={[0, 0, 0]}
          rotation={[-Math.PI / 2, 0, -0.99]}
          scale={0.3}
        />
        <instances.Cylinder3
          position={[0, 0, 0]}
          rotation={[-Math.PI / 2, 0, -0.99]}
          scale={0.3}
        />
        <instances.Cylinder4
          position={[0, 0, 0]}
          rotation={[-Math.PI / 2, 0, -0.99]}
          scale={[0.3]}
        />
        <instances.BezierCurve
          position={[0, 0, 0]}
          rotation={[-Math.PI / 2, 0, -0.99]}
          scale={0.3}
        />
      </group>
    </group>
  );
}

useGLTF.preload("/friedchknnp.glb");
